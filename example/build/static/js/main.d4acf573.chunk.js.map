{"version":3,"sources":["utils/filterImages.js","utils/filterStyle.js","utils/unsplash.js","utils/options.js","components/Spinner/index.js","components/Navbar/index.js","components/CodeEditorList/Editor.js","components/CodeEditorList/index.js","components/CodeBlock/index.js","components/CheckboxList/index.js","components/ColorPicker/index.js","components/Options/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["filterImages","images","titles","captions","map","currImage","image","title","undefined","caption","filterStyle","styles","Object","keys","reduce","acc","key","length","unsplash","Unsplash","applicationId","process","secret","callbackUrl","unsplashPhotos","topic","search","photos","Math","random","then","toJson","_ref","results","img","urls","regular","user","name","alt_description","catch","err","console","error","defaultOptions","checkboxes","defaultStyle","outerStyle","containerStyle","slideStyle","taglineStyle","titleStyle","captionStyle","dotsContainerStyle","dotStyle","dotActiveStyle","arrowStyle","previewStyle","previewActiveStyle","utils_options","objectSpread","swipe","displayArrows","loop","width","height","margin","boxShadow","background","fontWeight","fontSize","borderRadius","cover","arrowOnHover","displayDot","transition","position","padding","borderWidth","borderTop","borderRight","Spinner","react_default","a","createElement","className","Navbar","_useState","useState","_useState2","slicedToArray","close","setClose","useEffect","window","addEventListener","resizeHeaderOnScroll","removeEventListener","pageYOffset","document","documentElement","scrollTop","concat","fromatTitle","toUpperCase","slice","replace","parseCode","code","formattedCode","JSON","parse","stringifyCode","defaultCode","entries","stringify","CodeEditor","initialCode","setStyle","stringifiedCode","setCode","styleObj","style","defineProperty","e","htmlFor","lib_default","value","onValueChange","highlight","languages","jsx","CodeEditorList","styleClass","Editor","CodeBlock","defaultCheckboxes","defaultColors","checkboxOpts","colors","Prism","highlightAll","galleryOptions","_ref2","_ref3","property","stylesOptions","_ref4","_ref5","options","codeOutput","CheckboxList","setCheckboxOpts","sliderOpt","enable","onClick","prop","ColorPicker","setColors","handleColorChange","_e$target","target","color","onChange","type","Options","setOption","option","opt","i","socials","FaGithub","FaLinkedinIn","FaNpm","Footer","Fragment","role","aria-label","href","url","Icon","rel","autoPlay","displayPreview","primaryColor","secondaryColor","App","_options$option","_useState3","_useState4","setImages","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","filteredImages","useMemo","components_Navbar","build_default","assign","components_Spinner","components_Options","components_CheckboxList","components_ColorPicker","components_CodeEditorList","components_CodeBlock","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4acf573.chunk.js","sourcesContent":["function filterImages(images, titles, captions) {\n  return images.map(currImage => ({\n    image: currImage.image,\n    title: titles ? currImage.title : undefined,\n    caption: captions ? currImage.caption : undefined,\n  }));\n}\n\nexport default filterImages;\n","function filterStyle(styles) {\n  return Object.keys(styles).reduce((acc, key) => {\n    if (Object.keys(styles[key]).length) acc[key] = styles[key];\n    return acc;\n  }, {});\n}\n\nexport default filterStyle;\n","import Unsplash, { toJson } from 'unsplash-js';\n\nconst unsplash = new Unsplash({\n  applicationId: process.env.REACT_APP_APPLICATION_ID,\n  secret: process.env.REACT_APP_SECRET,\n  callbackUrl: process.env.REACT_APP_CALLBACK_URL,\n});\n\nconst unsplashPhotos = topic =>\n  unsplash.search\n    .photos(topic, Math.random() * 10)\n    .then(toJson)\n    .then(({ results }) => {\n      if (results.length) {\n        return results.map(img => ({\n          image: img.urls.regular,\n          title: img.user.name,\n          caption: img.alt_description,\n        }));\n      }\n    })\n    .catch(err => {\n      console.error(err);\n    });\n\nexport default unsplashPhotos;\n","const defaultOptions = {\n  checkboxes: {},\n  defaultStyle: {\n    outerStyle: {},\n    containerStyle: {},\n    slideStyle: {},\n    taglineStyle: {},\n    titleStyle: {},\n    captionStyle: {},\n    dotsContainerStyle: {},\n    dotStyle: {},\n    dotActiveStyle: {},\n    arrowStyle: {},\n    previewStyle: {},\n    previewActiveStyle: {},\n  },\n};\n\nconst option1 = { ...defaultOptions };\n\nconst option2 = {\n  checkboxes: {\n    swipe: true,\n    displayArrows: false,\n    loop: false,\n    titles: true,\n  },\n  defaultStyle: {\n    ...defaultOptions.defaultStyle,\n    slideStyle: {\n      width: '80%',\n      height: '90%',\n      margin: '5% 10%',\n      boxShadow: '0 2px 20px -1px #2222',\n    },\n    taglineStyle: {\n      background: '#FFF',\n    },\n    titleStyle: {\n      fontWeight: 800,\n      fontSize: '1.2rem',\n    },\n    dotStyle: {\n      width: '25px',\n      height: '3px',\n      borderRadius: 0,\n      margin: '0px',\n    },\n  },\n};\n\nconst option3 = {\n  checkboxes: {\n    swipe: false,\n    cover: false,\n    arrowOnHover: true,\n    displayDot: false,\n    transition: false,\n  },\n  defaultStyle: {\n    ...defaultOptions.defaultStyle,\n    slideStyle: {\n      width: '90%',\n      margin: '0% 5%',\n      position: 'relative',\n    },\n    arrowStyle: {\n      width: '0',\n      height: '0',\n      margin: '5px',\n      padding: '0',\n      borderWidth: '0 0 0 0',\n      borderTop: '10px solid transparent',\n      borderRight: '10px solid #333',\n    },\n  },\n};\n\nexport default [option1, option2, option3];\n","import React from 'react';\nimport './style.sass';\n\nconst Spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"rect1\"></div>\n    <div className=\"rect2\"></div>\n    <div className=\"rect3\"></div>\n    <div className=\"rect4\"></div>\n    <div className=\"rect5\"></div>\n  </div>\n);\n\nexport default Spinner;\n","import React, { useEffect, useState } from 'react';\nimport './style.sass';\n\nconst Navbar = () => {\n  const [close, setClose] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', resizeHeaderOnScroll);\n    return () => window.removeEventListener('scroll', resizeHeaderOnScroll);\n  }, []);\n\n  const resizeHeaderOnScroll = () => {\n    const distanceY = window.pageYOffset || document.documentElement.scrollTop;\n    if (distanceY < 80) setClose(false);\n    else if (!close) setClose(true);\n  };\n\n  return (\n    <div className={`navbar ${close ? 'navbar--close' : ''}`}>\n      <div className=\"navbar_title\">GALLEREACT</div>\n      <div className=\"navbar_payoff\">Flexible images slider</div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.sass';\n\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport 'prismjs/components/prism-jsx.min';\n\nconst CodeEditor = ({ initialCode, defaultCode, setStyle, name }) => {\n  const stringifiedCode = stringifyCode(defaultCode);\n  const [code, setCode] = useState(stringifiedCode || '');\n\n  useEffect(() => {\n    try {\n      const styleObj = code && parseCode(code);\n      setStyle(style => ({ ...style, [name]: styleObj || {} }));\n    } catch (e) {}\n  }, [code]);\n\n  useEffect(() => {\n    try {\n      const stringifiedCode = stringifyCode(initialCode);\n      setCode(stringifiedCode || '');\n    } catch (e) {}\n  }, [initialCode]);\n\n  return (\n    <div className=\"editor_container\">\n      <h3 htmlFor=\"containerStyle\">{fromatTitle(name)}</h3>\n      <Editor\n        value={code}\n        onValueChange={setCode}\n        highlight={code => highlight(code, languages.jsx)}\n        padding={10}\n        className=\"editor\"\n      />\n    </div>\n  );\n};\n\nconst fromatTitle = name => {\n  let title = name[0].toUpperCase() + name.slice(1).replace('Style', '');\n  if (title === 'Outer') title += ' (your external container)';\n  return title;\n};\n\nconst parseCode = code => {\n  const formattedCode = code\n    .replace(/([^{\\n ]+):/g, '\"$1\":') // wrap keys with double quotes\n    .replace(/([\\n]+)/g, '') // trim new line characters\n    .replace(/(\\/\\*.+\\*\\/)/g, ''); // delete comments\n  return JSON.parse(formattedCode);\n};\n\nconst stringifyCode = defaultCode => {\n  if (!Object.entries(defaultCode).length) return `{ /* insert your style here */ }`;\n  return JSON.stringify(defaultCode)\n    .replace(/\"([^(\")\"]+)\":/g, '\\n  $1:') // delete keys double quotes\n    .replace('}', '\\n}'); // after last property insert new line\n};\n\nCodeEditor.propTypes = {\n  setStyle: PropTypes.func.isRequired,\n  initialCode: PropTypes.object,\n  defaultCode: PropTypes.object,\n  name: PropTypes.string.isRequired,\n};\n\nexport default CodeEditor;\n","import React from 'react';\nimport './style.sass';\n\nimport CodeEditor from './Editor';\n\nconst CodeEditorList = ({ style, setStyle, defaultStyle }) =>\n  Object.keys(style).map(styleClass => (\n    <CodeEditor\n      key={styleClass}\n      initialCode={defaultStyle[styleClass]}\n      defaultCode={style[styleClass]}\n      setStyle={setStyle}\n      name={styleClass}\n    />\n  ));\n\nexport default CodeEditorList;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-jsx.min';\nimport './lightSyntax.css';\n\nconst CodeBlock = ({ defaultCheckboxes, defaultColors, style, checkboxOpts, colors }) => {\n  useEffect(() => {\n    Prism.highlightAll();\n  });\n\n  const galleryOptions = Object.entries({ ...checkboxOpts, ...colors }).reduce(\n    (acc, [property, value]) => {\n      if (!(value !== defaultCheckboxes[property] && value !== defaultColors[property])) return acc; // color\n      return acc + `\\n  ${property}={${value[0] === '#' ? JSON.stringify(value) : value}} `;\n    },\n    '',\n  );\n\n  const stylesOptions = Object.entries(style).reduce((acc, [className, options]) => {\n    if (className === 'outerStyle') return acc;\n    if (Object.keys(options).length) {\n      acc += `\\n  ${className}={${JSON.stringify(options).replace(/\"([^(\")\"]+)\":/g, '$1:')}} `;\n    }\n    return acc;\n  }, '');\n\n  const codeOutput = `<Gallereact\\n  images={[/* array of images */]} ${galleryOptions}${stylesOptions} \\n/>`;\n\n  return (\n    <div className=\"codeBlock_title\">\n      <pre>\n        <code className=\"language-jsx\">{codeOutput}</code>\n      </pre>\n    </div>\n  );\n};\n\nCodeBlock.propTypes = {\n  defaultCheckboxes: PropTypes.objectOf(PropTypes.any).isRequired,\n  defaultColors: PropTypes.objectOf(PropTypes.any).isRequired,\n  style: PropTypes.objectOf(PropTypes.any).isRequired,\n  checkboxOpts: PropTypes.objectOf(PropTypes.any).isRequired,\n  colors: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default CodeBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.sass';\n\nconst CheckboxList = ({ setCheckboxOpts, checkboxOpts }) => {\n  const handleCheckbox = prop => {\n    setCheckboxOpts(checkboxOpts => ({ ...checkboxOpts, [prop]: !checkboxOpts[prop] }));\n  };\n\n  return (\n    <div className=\"checks\">\n      {Object.entries(checkboxOpts).map(([sliderOpt, enable]) => (\n        <div\n          key={sliderOpt}\n          className={`checkbox${enable === true ? '--active' : ''}`}\n          onClick={() => handleCheckbox(sliderOpt)}\n        >\n          {sliderOpt[0].toUpperCase() + sliderOpt.slice(1)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCheckboxList.propTypes = {\n  setCheckboxOpts: PropTypes.func.isRequired,\n  checkboxOpts: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default CheckboxList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ColorPicker = ({ colors, setColors }) => {\n  const handleColorChange = e => {\n    const { name, value } = e.target;\n    setColors(colors => ({ ...colors, [name]: value }));\n  };\n\n  return (\n    <div className=\"colors\">\n      {Object.keys(colors).map(color => (\n        <label key={color} htmlFor=\"primaryColor\">\n          {color[0].toUpperCase() + color.slice(1).replace('Color', '')}\n          <input onChange={handleColorChange} type=\"color\" value={colors[color]} name={color} />\n        </label>\n      ))}\n    </div>\n  );\n};\n\nColorPicker.propTypes = {\n  setColors: PropTypes.func.isRequired,\n  colors: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default ColorPicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.sass';\n\nconst Options = ({ setOption, option, options }) => {\n  return (\n    <div className=\"options_container\">\n      {options.map((opt, i) => (\n        <div\n          key={'Option' + i}\n          onClick={() => setOption(i)}\n          className={option === i ? 'options--active' : 'options'}\n        >\n          {i === 0 ? 'Default' : `Option ${i}`}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nOptions.propTypes = {\n  setOption: PropTypes.func.isRequired,\n  option: PropTypes.number.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default Options;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport './style.sass';\n\nimport { FaGithub, FaLinkedinIn, FaNpm } from 'react-icons/fa';\n\nconst socials = [\n  ['https://github.com/div-Leo', FaGithub],\n  ['https://www.linkedin.com/in/leonardo-di-vittorio/', FaLinkedinIn],\n  ['https://www.npmjs.com/package/gallereact', FaNpm],\n];\n\nconst Footer = () => (\n  <>\n    <div className=\"power_container\">\n      Made with{' '}\n      <span role=\"img\" aria-label=\"love\">\n        ❤️{' '}\n      </span>\n      by{' '}\n      <a href=\"https://www.leonardodivittorio.com\" target=\"blank\">\n        div.leo\n      </a>\n    </div>\n    <div className=\"footer_socials\">\n      {socials.map(([url, Icon]) => (\n        <a key={url} rel=\"noopener noreferrer\" href={url} target=\"_blank\">\n          <Icon />\n        </a>\n      ))}\n    </div>\n  </>\n);\n\nexport default Footer;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport Gallereact from 'gallereact';\n\nimport { filterImages, filterStyle, unsplashPhotos, options } from './utils';\nimport {\n  CheckboxList,\n  CodeBlock,\n  CodeEditorList,\n  ColorPicker,\n  Navbar,\n  Spinner,\n  Options,\n  Footer,\n} from './components';\n\nimport './App.sass';\n\nconst defaultCheckboxes = {\n  swipe: false,\n  cover: true,\n  arrowOnHover: false,\n  transition: true,\n  loop: true,\n  autoPlay: false,\n  titles: false,\n  captions: false,\n  displayPreview: false,\n  displayDot: true,\n  displayArrows: true,\n};\n\nconst defaultColors = {\n  primaryColor: '#CCCCCC',\n  secondaryColor: '#333333',\n};\n\nconst App = () => {\n  const [option, setOption] = useState(1);\n  const { defaultStyle, checkboxes } = options[option];\n\n  const [images, setImages] = useState([]);\n  const [checkboxOpts, setCheckboxOpts] = useState({ ...defaultCheckboxes, ...checkboxes });\n  const [colors, setColors] = useState(defaultColors);\n  const [style, setStyle] = useState(defaultStyle);\n\n  useEffect(() => {\n    unsplashPhotos('italy').then(images => images && setImages(images));\n  }, []);\n\n  useEffect(() => {\n    setCheckboxOpts({ ...defaultCheckboxes, ...checkboxes });\n    setStyle({ ...defaultStyle });\n  }, [option]);\n\n  const { titles, captions } = checkboxOpts;\n\n  const filteredImages = useMemo(() => filterImages(images, titles, captions), [\n    images,\n    titles,\n    captions,\n  ]);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"slider_container\" style={style.outerStyle}>\n        {images.length ? (\n          <Gallereact\n            images={filteredImages}\n            {...filterStyle(style)}\n            {...colors}\n            {...checkboxOpts}\n          />\n        ) : (\n          <Spinner />\n        )}\n      </div>\n      <div className=\"description_container\">\n        <h1>Gallereact</h1>\n        <p>\n          {' '}\n          Here you have a playground to try out all the possible customizations availables for\n          gallereact. <br /> Set the options you prefer then at the bottom of the page you can copy\n          your custom code snippet. <br /> For getting started check out the npm package{' '}\n          <a href=\"https://www.npmjs.com/package/gallereact\">gallereact</a>\n        </p>\n      </div>\n      <div className=\"settings_container\">\n        <h1>Options</h1>\n        <Options {...{ setOption, option, options }} />\n        <h1>Booleans</h1>\n        <CheckboxList {...{ checkboxOpts, setCheckboxOpts }} />\n        <h1>Colors</h1>\n        <ColorPicker {...{ colors, setColors }} />\n        <h1>Styles</h1>\n        <CodeEditorList {...{ style, setStyle, defaultStyle }} />\n        <h1>Output code</h1>\n        <CodeBlock {...{ defaultCheckboxes, defaultColors, style, checkboxOpts, colors }} />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}